[ftplugin]

_ = '''
    setl formatoptions-=t
    setl formatoptions-=c
    setl formatoptions-=r
    setl formatoptions-=o
    setl formatoptions+=mMl
'''

lua_lua = '''
    local function filereadable(path)
        return vim.bool_fn.filereadable(vim.fn.expand(path))
    end

    local stylua_toml
    if filereadable("stylua.toml") then
      stylua_toml = "stylua.toml"
    elseif filereadable(".stylua.toml") then
      stylua_toml = ".stylua.toml"
    else
      stylua_toml = vim.fn.expand("~/.config/stylua.toml")
    end

    local tab_size, is_hard_tab = 2, false
    for line in io.lines(stylua_toml) do
      if vim.startswith(line, "indent_width") then
        tab_size = tonumber(line:match("%d+")) or 2
      elseif vim.startswith(line, "indent_type") then
        is_hard_tab = not not line:find("Tabs")
      end
    end

    require("rc").set_indent(tab_size, is_hard_tab)
'''

lua_typescript_vim_sh_html_xhtml_nim_markdown = '''
    require("rc").set_indent(2)
'''

lua_python_toml = '''
    require("rc").set_indent(4)
'''

lua_qf_go = '''
    require("rc").set_indent(4, true)
'''

lua_help = '''
    require("rc").set_indent(8, true)
'''

toml = '''
    setl foldenable
    setl foldmethod=expr
    setl foldexpr=<SID>fold_expr(v:lnum)

    function! s:fold_expr(lnum) abort
      let line = getline(a:lnum)
      return line ==# '' || line[0:3] ==# '    '
    endfunction
'''

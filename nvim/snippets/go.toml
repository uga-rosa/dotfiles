[print]
prefix = "p"
body = "fmt.${1|Print,Println,Printf|}($2)"

[sprint]
prefix = "sp"
body = "fmt.${1|Sprint,Sprintln,Sprintf|}($2)"

[fprint]
prefix = "fp"
body = "fmt.${1|Fprint,Fprintln,Fprintf|}($2)"

[fn]
prefix = "fn"
body = """
func ${1:name}($2) $3 {
	$0
}\
"""

[method]
prefix = "method"
body = """
func (${1:a *A}) ${2:name}($3) $4 {
	$0
}\
"""

[if]
prefix = "if"
body = """
if $1 {
	$0
}\
"""

[else_if]
prefix = "else_if"
body = """
else if $1 {
	$0
}\
"""

[else]
prefix = "else"
body = """
else {
	$0
}\
"""

[if_else]
prefix = "if_else"
body = """
if $1 {
	$2
} else {
	$0
}\
"""

[if_err]
prefix = "if_err"
body = """
if ${1:err} != nil {
	$0
}\
"""

[for]
prefix = "for"
body = """
for $1{
	$0
}\
"""

[for_inc]
prefix = "for_inc"
body = """
for ${1:i} := ${2:0}; $1 < ${3:10}; ${4:$1++} {
	$0
}\
"""

[for_range]
prefix = "for_range"
body = """
for ${1:i, v} := range $2 {
	$0
}\
"""

[switch]
prefix = "switch"
body = """
switch $1 {
case $2:
	$0
}\
"""

[case]
prefix = "case"
body = """
case $1:
	$0\
"""

[default]
prefix = "default"
body = """
default:
	$0\
"""

[rt]
prefix = "rt"
body = "return"

[type]
prefix = "type"
body = "type $0"

[struct]
prefix = "struct"
body = """
struct {
	$0
}\
"""

[interface]
prefix = "interface"
body = """
interface {
	$0
}\
"""

[set]
prefix = "set"
body = "map[${1:int}]struct{}{}"
